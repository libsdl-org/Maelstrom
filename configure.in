dnl Process this file with autoconf to produce a configure script.
AC_INIT(README)
AC_CONFIG_AUX_DIR(build-scripts)

dnl Detect the canonical target build environment
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

dnl Setup for automake
AM_INIT_AUTOMAKE(Maelstrom, 4.0.0)

dnl Check for tools

AC_PROG_MAKE_SET
AC_PROG_CC
AC_PROG_CXX
AC_PROG_RANLIB
AC_PROG_INSTALL

dnl The alpha architecture needs special flags for binary portability
case "$target" in
    alpha*-*-linux*)
        CFLAGS="$CFLAGS -mcpu=ev4 -Wa,-mall"
        ;;
esac

dnl Figure out which math and networking libraries to use
case "$target" in
    *-*-mingw32*)
        EXTRA_LIBS="-lwsock32"
        ;;
    *-*-beos*)
        EXTRA_LIBS=""
        ;;
    *-*-darwin*)
        EXTRA_LIBS="-framework CoreFoundation"
        ;;
    *)
        EXTRA_LIBS="-lm"
        ;;
esac
AC_SUBST(EXTRA_LIBS)

dnl Check for SDL
SDL_VERSION=2.0.0
AM_PATH_SDL2($SDL_VERSION,
            :,
            AC_MSG_ERROR([*** SDL version $SDL_VERSION not found!])
)
CFLAGS="$CFLAGS $SDL_CFLAGS"
LIBS="$LIBS $SDL_LIBS"

dnl Check for SDL_image
AC_CHECK_LIB(SDL2_image, IMG_Init, have_SDL_image=yes)
if test x$have_SDL_image = xyes; then
    LIBS="$LIBS -lSDL2_image"
else
    AC_MSG_ERROR([*** Can't find the SDL_image library
The SDL_image library can be found at:
http://www.libsdl.org/projects/SDL_image/
])
fi

dnl Check for SDL_ttf
AC_CHECK_LIB(SDL2_ttf, TTF_Init, have_SDL_ttf=yes)
if test x$have_SDL_ttf = xyes; then
    LIBS="$LIBS -lSDL2_ttf"
else
    AC_MSG_ERROR([*** Can't find the SDL_ttf library
The SDL_ttf library can be found at:
http://www.libsdl.org/projects/SDL_ttf/
])
fi

dnl Check for SDL_net
AC_CHECK_LIB(SDL2_net, SDLNet_Init, have_SDL_net=yes)
if test x$have_SDL_net = xyes; then
    LIBS="$LIBS -lSDL2_net"
else
    AC_MSG_ERROR([*** Can't find the SDL_net library
The SDL_net library can be found at:
http://www.libsdl.org/projects/SDL_net/
])
fi

dnl Check for zlib
#CHECK_ZLIB
LIBS="$LIBS -lz"

dnl Set up the icon object file, for Mingw32
case "$target" in
    *-*-mingw32*)
        cp ico_o ico.o
	ICONOBJ="ico.o"
        ;;
    *)
	ICONOBJ=""
        ;;
esac
AC_SUBST(ICONOBJ)

dnl Set up the game data install directory
case "$target" in
    *-*-mingw32*)
        GAME_INSTALLDIR="."
	ICONOBJ="ico.o"
        ;;
    *-*-beos*)
        ac_default_prefix=/boot/beos
        GAME_INSTALLDIR="\$(prefix)/games/$PACKAGE"
        ;;
    *)
        GAME_INSTALLDIR="\$(prefix)/games/$PACKAGE"
        ;;
esac
AC_SUBST(GAME_INSTALLDIR)

dnl C++ flags are the same as the C flags
CXXFLAGS="$CXXFLAGS $CFLAGS"

# Finally create all the generated files
AC_OUTPUT([
Makefile
game/Makefile
screenlib/Makefile
maclib/Makefile
physfs/Makefile
utils/Makefile
Maelstrom.spec
])
